{"version":3,"sources":["Components/plus.svg","fragments.js","queries.js","Routes/Notes/Notes.js","Routes/Notes/index.js","Routes/Note/Note.js","Routes/Note/index.js","Components/Editor/Editor.js","Components/Editor/index.js","Routes/Add/Add.js","Routes/Add/index.js","Routes/Edit/Edit.js","Routes/Edit/index.js","Components/App/index.js","Components/App/App.js","offline.js","clientState.js","apollo.js","globalStyles.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","plus_ref","react_default","a","createElement","d","plus_SvgComponent","props","width","height","viewBox","__webpack_require__","p","NOTE_FRAGMENT","gql","_templateObject","GET_NOTES","queries_templateObject","GET_NOTE","_templateObject2","Header","styled","div","Notes_templateObject","Title","h1","Notes_templateObject2","Button","_templateObject3","Subtitle","h2","_templateObject4","Notes","_templateObject5","Note","_templateObject6","NoteTitle","span","_templateObject7","Fragment","Link","to","react_apollo_browser_umd","query","_ref","data","notes","map","note","concat","id","Notes_Note","title","React","Component","TitleComponent","Note_templateObject","Note_templateObject2","button","Note_templateObject3","match","params","variables","Note_Title","Note_Button","dist_default","markdown","content","TitleInput","TextareaAutosize","Editor_templateObject","ContentPreview","Editor_templateObject2","ContentInput","Editor_templateObject3","TitleContainer","Editor_templateObject4","Editor_templateObject5","Editor","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","_onInputChange","event","_event$target","value","name","setState","defineProperty","_onSave","onSave","_this$state","state","_this$state2","onChange","placeholder","Editor_Button","onClick","className","ADD_NOTE","Add_templateObject","Add","push","history","createNote","_this2","mutation","Components_Editor","EDIT_NOTE","Edit_templateObject","Edit","editNote","App","BrowserRouter","Switch","Route","exact","path","component","saveNotes","cache","readQuery","jsonNotes","JSON","stringify","localStorage","setItem","error","console","log","defaults","getItem","parse","restoreNotes","resolvers","Query","_","config","dataIdFromObject","__typename","readFragment","fragment","Mutation","_ref2","newNote","writeData","toConsumableArray","_ref3","_ref4","noteId","updatedNote","objectSpread","writeFragment","InMemoryCache","stateLink","withClientState","typeDefs","client","ApolloClient","link","ApolloLink","from","injectGlobal","globalStyles_templateObject","ReactDOM","render","Components_App","document","getElementById"],"mappings":"iOAAA,SAAAA,IAAmR,OAA9PA,EAAAC,OAAAC,QAAA,SAAAC,GAAgD,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkBS,MAAAC,KAAAR,WAInR,IAAIS,EAEJC,EAAAC,EAAKC,cAAA,QACLC,EAAA,+CAGIC,EAAY,SAAAC,GAChB,OAASL,EAAAC,EAAKC,cAAA,MAAAjB,EAAA,CACdqB,MAAA,GACAC,OAAA,GACAC,QAAA,aACGH,GAAUN,OAMEU,EAAAC,qKCnBR,IAAMC,EAAgBC,IAAHC,sTCCnB,IAAMC,EAAYF,IAAHG,IAMlBJ,GAGSK,EAAWJ,IAAHK,IAMjBN,orCCXJ,IAAMO,EAASC,IAAOC,IAAVC,KAINC,EAAQH,IAAOI,GAAVC,KASLC,EAASN,IAAOC,IAAVM,KAWNC,EAAWR,IAAOS,GAAVC,KAKRC,EAAQX,IAAOC,IAAVW,KAMLC,EAAOb,IAAOC,IAAVa,KAYJC,EAAYf,IAAOgB,KAAVC,KCrDAN,mLD6DX,OACE9B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACErC,EAAAC,EAAAC,cAACgB,EAAD,KACElB,EAAAC,EAAAC,cAACoB,EAAD,mBAEEtB,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAMC,GAAI,iDACRvC,EAAAC,EAAAC,cAACuB,EAAD,KACEzB,EAAAC,EAAAC,cAACE,EAAD,SAINJ,EAAAC,EAAAC,cAACyB,EAAD,sCAEF3B,EAAAC,EAAAC,cAAC4B,EAAD,KACE9B,EAAAC,EAAAC,cAACsC,EAAA,MAAD,CAAOC,MAAO3B,GACX,SAAA4B,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACCA,EAAKC,MACDD,EAAKC,MAAMC,IAAI,SAAAC,GAAI,OACjB9C,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACEC,GAAE,kDAAAQ,OACAD,EAAKE,IAEPvD,IAAKqD,EAAKE,IAEVhD,EAAAC,EAAAC,cAAC+C,EAAD,KACEjD,EAAAC,EAAAC,cAACgC,EAAD,KAAYY,EAAKI,WAIvB,gBA/B0BC,IAAMC,qYErDlD,IAAMC,EAAiBlC,IAAOC,IAAVkC,KAOdhC,EAAQH,IAAOI,GAAVgC,KAML9B,EAASN,IAAOqC,OAAVC,KCnBGzB,mLDsBJ,IAGOgB,EAEVlD,KAAKO,MAHPqD,MACEC,OAAUX,GAGd,OACEhD,EAAAC,EAAAC,cAACsC,EAAA,MAAD,CAAOC,MAAOzB,EAAU4C,UAAW,CAAEZ,OAClC,SAAAN,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACCA,EAAKG,KACH9C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACErC,EAAAC,EAAAC,cAACmD,EAAD,KACErD,EAAAC,EAAAC,cAAC2D,EAAD,KAAQlB,EAAKG,MAAQH,EAAKG,KAAKI,OAC/BlD,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACEC,GAAE,kDAAAQ,OACAJ,EAAKG,KAAKE,KAGZhD,EAAAC,EAAAC,cAAC4D,EAAD,eAGJ9D,EAAAC,EAAAC,cAAC6D,EAAA9D,EAAD,CAAkB+D,SAAUrB,EAAKG,KAAKmB,WAEtC,cAxBoBd,IAAMC,2qBEjBxC,IAAMc,GAAa/C,YAAOgD,KAAPhD,CAAHiD,MASVC,GAAiBlD,IAAOC,IAAVkD,MAMdC,GAAepD,YAAOgD,KAAPhD,CAAHqD,MAKZC,GAAiBtD,IAAOC,IAAVsD,MAMdjD,GAASN,IAAOqC,OAAVmB,MC9BGC,eDiCb,SAAAA,EAAYvE,GAAO,IAAAwE,EAAA,OAAA3F,OAAA4F,EAAA,EAAA5F,CAAAY,KAAA8E,IACjBC,EAAA3F,OAAA6F,EAAA,EAAA7F,CAAAY,KAAAZ,OAAA8F,EAAA,EAAA9F,CAAA0F,GAAAhF,KAAAE,KAAMO,KAgCR4E,eAAiB,SAAAC,GAAS,IAAAC,EAGpBD,EADF9F,OAAUgG,EAFYD,EAEZC,MAAOC,EAFKF,EAELE,KAEnBR,EAAKS,SAALpG,OAAAqG,GAAA,EAAArG,CAAA,GACGmG,EAAOD,KAtCOP,EAyCnBW,QAAU,WAAM,IACNC,EAAWZ,EAAKxE,MAAhBoF,OADMC,EAEiBb,EAAKc,MACpCF,EAHcC,EAENxC,MAFMwC,EAECzB,QAFDyB,EAEU1C,KAzCxB6B,EAAKc,MAAQ,CACXzC,MAAO7C,EAAM6C,OAAS,GACtBe,QAAS5D,EAAM4D,SAAW,GAC1BjB,GAAI3C,EAAM2C,IAAM,MALD6B,wEAQV,IAAAe,EACoB9F,KAAK6F,MAAxBzC,EADD0C,EACC1C,MAAOe,EADR2B,EACQ3B,QACf,OACEjE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoC,SAAA,KACErC,EAAAC,EAAAC,cAACuE,GAAD,KACEzE,EAAAC,EAAAC,cAACgE,GAAD,CACEkB,MAAOlC,EACP2C,SAAU/F,KAAKmF,eACfa,YAAa,cACbT,KAAM,UAERrF,EAAAC,EAAAC,cAAC6F,GAAD,CAAQC,QAASlG,KAAK0F,SAAtB,SAEFxF,EAAAC,EAAAC,cAACmE,GAAD,KACErE,EAAAC,EAAAC,cAACqE,GAAD,CACEa,MAAOnB,EACP4B,SAAU/F,KAAKmF,eACfa,YAAa,4BACbT,KAAM,YAERrF,EAAAC,EAAAC,cAAC6D,EAAA9D,EAAD,CAAkB+D,SAAUC,EAASgC,UAAW,sBA7BtB9C,IAAMC,mOE5B1C,IAAM8C,GAAWtF,IAAHuF,MCJCC,8MDuBbZ,QAAU,SAACtC,EAAOe,GAAY,IAEfoC,EACTxB,EAAKxE,MADPiG,QAAWD,KAEC,KAAVnD,GAA4B,KAAZe,IAClBY,EAAK0B,WAAW,CAAE3C,UAAW,CAAEV,QAAOe,aACtCoC,EAAK,wHAhBA,IAAAG,EAAA1G,KACP,OACEE,EAAAC,EAAAC,cAACsC,EAAA,SAAD,CAAUiE,SAAUP,IACjB,SAAAK,GAEC,OADAC,EAAKD,WAAaA,EACXvG,EAAAC,EAAAC,cAACwG,GAAD,CAAQjB,OAAQe,EAAKhB,mBANLrC,IAAMC,mPEPhC,IAAMuD,GAAY/F,IAAHgG,MCLPC,8MD0CbrB,QAAU,SAACtC,EAAOe,EAASjB,GAAO,IAEnBqD,EACTxB,EAAKxE,MADPiG,QAAWD,KAEC,KAAVnD,GAA4B,KAAZe,GAAkBjB,IACpC6B,EAAKiC,SAAS,CAAElD,UAAW,CAAEV,QAAOe,UAASjB,QAC7CqD,EAAK,wHAlCA,IAAAG,EAAA1G,KAGOkD,EAEVlD,KAAKO,MAHPqD,MACEC,OAAUX,GAGd,OACEhD,EAAAC,EAAAC,cAACsC,EAAA,MAAD,CAAOC,MAAOzB,EAAU4C,UAAW,CAAEZ,OAClC,SAAAN,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACCA,EAAKG,KACH9C,EAAAC,EAAAC,cAACsC,EAAA,SAAD,CAAUiE,SAAUE,IACjB,SAAAG,GAEC,OADAN,EAAKM,SAAWA,EAEd9G,EAAAC,EAAAC,cAACwG,GAAD,CACExD,MAAOP,EAAKG,KAAKI,MACjBe,QAAStB,EAAKG,KAAKmB,QACnBjB,GAAIL,EAAKG,KAAKE,GACdyC,OAAQe,EAAKhB,YAKnB,cAxBoBrC,IAAMC,WEbzB2D,oLCQX,OACE/G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,KACEhH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,KACEjH,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CACEC,OAAO,EACPC,KAAM,6CACNC,UAAWvF,IAEb9B,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CACEE,KAAM,gDACNC,UAAWjB,KAEbpG,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CACEE,KAAM,qDACNC,UAAWrF,IAEbhC,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CACEE,KAAM,qDACNC,UAAWR,cApBLzD,mECLLkE,GAAY,SAAAC,GAAS,IACxB3E,EAAU2E,EAAMC,UAAU,CAAE/E,MAAO3B,IAAnC8B,MACF6E,EAAYC,KAAKC,UAAU/E,GACjC,IACEgF,aAAaC,QAAQ,QAASJ,GAC9B,MAAOK,GACPC,QAAQC,IAAIF,KCJHG,GAAW,CACtBrF,MDO0B,WAC1B,IAAMA,EAAQgF,aAAaM,QAAQ,SACnC,GAAItF,EACF,IAEE,OADoB8E,KAAKS,MAAMvF,GAE/B,MAAOkF,GAEP,OADAC,QAAQC,IAAIF,GACL,GAGX,MAAO,GClBAM,IAuBIC,GAAY,CACvBC,MAAO,CACLxF,KAAM,SAACyF,EAAG3E,EAAJlB,GAA6B,IAAZ6E,EAAY7E,EAAZ6E,MACfvE,EAAKuE,EAAMiB,OAAOC,iBAAiB,CACvCC,WAAY,OACZ1F,GAAIY,EAAUZ,KAEVF,EAAOyE,EAAMoB,aAAa,CAAEC,SAAUjI,EAAeqC,OAC3D,OAAOF,IAGX+F,SAAU,CACRtC,WAAY,SAACgC,EAAG3E,EAAJkF,GAA6B,IAAZvB,EAAYuB,EAAZvB,MACnB3E,EAAU2E,EAAMC,UAAU,CAAE/E,MAAO3B,IAAnC8B,MAEFmG,EAAU,CACdL,WAAY,OACZxF,MAHyBU,EAAnBV,MAINe,QAJyBL,EAAZK,QAKbjB,GAAIJ,EAAMrD,OAAS,GAQrB,OANAgI,EAAMyB,UAAU,CACdrG,KAAM,CACJC,MAAK,CAAGmG,GAAHhG,OAAA7D,OAAA+J,GAAA,EAAA/J,CAAe0D,OAGxB0E,GAAUC,GACHwB,GAETjC,SAAU,SAACyB,EAADW,EAAAC,GAA0C,IAApCnG,EAAoCkG,EAApClG,GAAIE,EAAgCgG,EAAhChG,MAAOe,EAAyBiF,EAAzBjF,QAAasD,EAAY4B,EAAZ5B,MAChC6B,EAAS7B,EAAMiB,OAAOC,iBAAiB,CAC3CC,WAAY,OACZ1F,OAEIF,EAAOyE,EAAMoB,aAAa,CAAEC,SAAUjI,EAAeqC,GAAIoG,IACzDC,EAAWnK,OAAAoK,GAAA,EAAApK,CAAA,GACZ4D,EADY,CAEfI,QACAe,YAQF,OANAsD,EAAMgC,cAAc,CAClBvG,GAAIoG,EACJR,SAAUjI,EACVgC,KAAM0G,IAER/B,GAAUC,GACH8B,KCnEP9B,GAAQ,IAAIiC,KAEZC,GAAYC,aAAgB,CAChCnC,SACAoC,SDJsB,oZCKtB1B,YACAI,eAQauB,GALA,IAAIC,KAAa,CAC9BtC,SACAuC,KAAMC,KAAWC,KAAK,CAACP,6wCChBzBQ,YAAYC,MCKZC,IAASC,OACPpK,EAAAC,EAAAC,cAACsC,EAAA,eAAD,CAAgBoH,OAAQA,IACtB5J,EAAAC,EAAAC,cAACmK,GAAD,OAEFC,SAASC,eAAe","file":"static/js/main.aba9c7a8.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"\n});\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\"\n  }, props), _ref);\n};\n\n{\n  \";\";\n}\nexport default __webpack_public_path__ + \"static/media/plus.729364f7.svg\";\nexport { SvgComponent as ReactComponent };","import gql from \"graphql-tag\";\n\nexport const NOTE_FRAGMENT = gql`\n  fragment NoteParts on Note {\n    id\n    title\n    content\n  }\n`;\n","import gql from \"graphql-tag\";\nimport { NOTE_FRAGMENT } from \"./fragments\";\n\nexport const GET_NOTES = gql`\n  {\n    notes @client {\n      ...NoteParts\n    }\n  }\n  ${NOTE_FRAGMENT}\n`;\n\nexport const GET_NOTE = gql`\n  query getNote($id: Int!) {\n    note(id: $id) @client {\n      ...NoteParts\n    }\n  }\n  ${NOTE_FRAGMENT}\n`;\n","import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as Plus } from \"../../Components/plus.svg\";\nimport styled from \"styled-components\";\nimport { GET_NOTES } from \"../../queries\";\n\nconst Header = styled.div`\n  margin-bottom: 50px;\n`;\n\nconst Title = styled.h1`\n  font-size: 50px;\n  font-weight: 600;\n  margin: 0;\n  margin-bottom: 30px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Button = styled.div`\n  margin-left: 10px;\n  transform: scale(0.8);\n  background-color: #eee;\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  border-radius: 10px;\n  cursor: pointer;\n`;\n\nconst Subtitle = styled.h2`\n  color: #a2a19e;\n  font-weight: 400;\n`;\n\nconst Notes = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst Note = styled.div`\n  padding: 10px;\n  padding-left: 5px;\n  transition: background-color 0.1s linear;\n  cursor: pointer;\n  border-radius: 5px;\n  margin-bottom: 10px;\n  &:hover {\n    background-color: #eeeeee;\n  }\n`;\n\nconst NoteTitle = styled.span`\n  padding-bottom: 5px;\n  font-weight: 600;\n  font-size: 20px;\n`;\n\nexport default class NotesContainer extends React.Component {\n  render() {\n    return (\n      <>\n        <Header>\n          <Title>\n            Nomad Notes\n            <Link to={\"https://nomadcoders.github.io/nomad-notes/add\"}>\n              <Button>\n                <Plus />\n              </Button>\n            </Link>\n          </Title>\n          <Subtitle>Taking notes while we learn.</Subtitle>\n        </Header>\n        <Notes>\n          <Query query={GET_NOTES}>\n            {({ data }) =>\n              data.notes\n                ? data.notes.map(note => (\n                    <Link\n                      to={`https://nomadcoders.github.io/nomad-notes/note/${\n                        note.id\n                      }`}\n                      key={note.id}\n                    >\n                      <Note>\n                        <NoteTitle>{note.title}</NoteTitle>\n                      </Note>\n                    </Link>\n                  ))\n                : null\n            }\n          </Query>\n        </Notes>\n      </>\n    );\n  }\n}\n","import Notes from \"./Notes\";\nexport default Notes;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Query } from \"react-apollo\";\nimport styled from \"styled-components\";\nimport MarkdownRenderer from \"react-markdown-renderer\";\nimport { GET_NOTE } from \"../../queries\";\n\nconst TitleComponent = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 50px;\n`;\n\nconst Title = styled.h1`\n  font-size: 50px;\n  margin: 0;\n  padding: 0;\n`;\n\nconst Button = styled.button``;\n\nexport default class Note extends React.Component {\n  render() {\n    const {\n      match: {\n        params: { id }\n      }\n    } = this.props;\n    return (\n      <Query query={GET_NOTE} variables={{ id }}>\n        {({ data }) =>\n          data.note ? (\n            <>\n              <TitleComponent>\n                <Title>{data.note && data.note.title}</Title>\n                <Link\n                  to={`https://nomadcoders.github.io/nomad-notes/edit/${\n                    data.note.id\n                  }`}\n                >\n                  <Button>Edit</Button>\n                </Link>\n              </TitleComponent>\n              <MarkdownRenderer markdown={data.note.content} />\n            </>\n          ) : null\n        }\n      </Query>\n    );\n  }\n}\n","import Note from \"./Note\";\nexport default Note;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport MarkdownRenderer from \"react-markdown-renderer\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nconst TitleInput = styled(TextareaAutosize)`\n  font-size: 50px;\n  font-weight: 600;\n  width: 100%;\n  &::placeholder {\n    font-weight: 600;\n  }\n`;\n\nconst ContentPreview = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 50px;\n`;\n\nconst ContentInput = styled(TextareaAutosize)`\n  font-size: 18px;\n  margin-top: 15px;\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 50px;\n`;\n\nconst Button = styled.button``;\n\nexport default class Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: props.title || \"\",\n      content: props.content || \"\",\n      id: props.id || null\n    };\n  }\n  render() {\n    const { title, content } = this.state;\n    return (\n      <>\n        <TitleContainer>\n          <TitleInput\n            value={title}\n            onChange={this._onInputChange}\n            placeholder={\"Untitled...\"}\n            name={\"title\"}\n          />\n          <Button onClick={this._onSave}>Save</Button>\n        </TitleContainer>\n        <ContentPreview>\n          <ContentInput\n            value={content}\n            onChange={this._onInputChange}\n            placeholder={\"# This supports markdown!\"}\n            name={\"content\"}\n          />\n          <MarkdownRenderer markdown={content} className={\"markdown\"} />\n        </ContentPreview>\n      </>\n    );\n  }\n  _onInputChange = event => {\n    const {\n      target: { value, name }\n    } = event;\n    this.setState({\n      [name]: value\n    });\n  };\n  _onSave = () => {\n    const { onSave } = this.props;\n    const { title, content, id } = this.state;\n    onSave(title, content, id);\n  };\n}\n","import Editor from \"./Editor\";\nexport default Editor;\n","import React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Editor from \"../../Components/Editor\";\n\nconst ADD_NOTE = gql`\n  mutation createNote($title: String!, $content: String!) @client {\n    createNote(title: $title, content: $content) {\n      id\n    }\n  }\n`;\n\nexport default class Add extends React.Component {\n  render() {\n    return (\n      <Mutation mutation={ADD_NOTE}>\n        {createNote => {\n          this.createNote = createNote;\n          return <Editor onSave={this._onSave} />;\n        }}\n      </Mutation>\n    );\n  }\n  _onSave = (title, content) => {\n    const {\n      history: { push }\n    } = this.props;\n    if (title !== \"\" && content !== \"\") {\n      this.createNote({ variables: { title, content } });\n      push(\"https://nomadcoders.github.io/nomad-notes/\");\n    }\n  };\n}\n","import Add from \"./Add\";\nexport default Add;\n","import React from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { GET_NOTE } from \"../../queries\";\nimport Editor from \"../../Components/Editor\";\nimport gql from \"graphql-tag\";\n\nexport const EDIT_NOTE = gql`\n  mutation editNote($id: Int!, $title: String!, $content: String!) @client {\n    editNote(id: $id, title: $title, content: $content) {\n      id\n    }\n  }\n`;\n\nexport default class Edit extends React.Component {\n  render() {\n    const {\n      match: {\n        params: { id }\n      }\n    } = this.props;\n    return (\n      <Query query={GET_NOTE} variables={{ id }}>\n        {({ data }) =>\n          data.note ? (\n            <Mutation mutation={EDIT_NOTE}>\n              {editNote => {\n                this.editNote = editNote;\n                return (\n                  <Editor\n                    title={data.note.title}\n                    content={data.note.content}\n                    id={data.note.id}\n                    onSave={this._onSave}\n                  />\n                );\n              }}\n            </Mutation>\n          ) : null\n        }\n      </Query>\n    );\n  }\n  _onSave = (title, content, id) => {\n    const {\n      history: { push }\n    } = this.props;\n    if (title !== \"\" && content !== \"\" && id) {\n      this.editNote({ variables: { title, content, id } });\n      push(\"https://nomadcoders.github.io/nomad-notes/\");\n    }\n  };\n}\n","import Edit from \"./Edit\";\nexport default Edit;\n","import App from \"./App\";\nexport default App;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Notes from \"../../Routes/Notes\";\nimport Note from \"../../Routes/Note\";\nimport Add from \"../../Routes/Add\";\nimport Edit from \"../../Routes/Edit\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact={true}\n            path={\"https://nomadcoders.github.io/nomad-notes/\"}\n            component={Notes}\n          />\n          <Route\n            path={\"https://nomadcoders.github.io/nomad-notes/add\"}\n            component={Add}\n          />\n          <Route\n            path={\"https://nomadcoders.github.io/nomad-notes/note/:id\"}\n            component={Note}\n          />\n          <Route\n            path={\"https://nomadcoders.github.io/nomad-notes/edit/:id\"}\n            component={Edit}\n          />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import { GET_NOTES } from \"./queries\";\n\nexport const saveNotes = cache => {\n  const { notes } = cache.readQuery({ query: GET_NOTES });\n  const jsonNotes = JSON.stringify(notes);\n  try {\n    localStorage.setItem(\"notes\", jsonNotes);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const restoreNotes = () => {\n  const notes = localStorage.getItem(\"notes\");\n  if (notes) {\n    try {\n      const parsedNotes = JSON.parse(notes);\n      return parsedNotes;\n    } catch (error) {\n      console.log(error);\n      return [];\n    }\n  }\n  return [];\n};\n","import { NOTE_FRAGMENT } from \"./fragments\";\nimport { GET_NOTES } from \"./queries\";\nimport { saveNotes, restoreNotes } from \"./offline\";\n\nexport const defaults = {\n  notes: restoreNotes()\n};\nexport const typeDefs = [\n  `\n    schema {\n        query: Query\n        mutation: Mutation\n    }\n    type Query {\n        notes: [Note]!\n        note(id: Int!): Note\n    }\n    type Mutation{\n        createNote(title: String!, content: String!): Note\n        editNote(id: Int!, title: String, content:String): Note\n    }\n    type Note{\n        id: Int!\n        title: String!\n        content: String!\n    }\n    `\n];\nexport const resolvers = {\n  Query: {\n    note: (_, variables, { cache }) => {\n      const id = cache.config.dataIdFromObject({\n        __typename: \"Note\",\n        id: variables.id\n      });\n      const note = cache.readFragment({ fragment: NOTE_FRAGMENT, id });\n      return note;\n    }\n  },\n  Mutation: {\n    createNote: (_, variables, { cache }) => {\n      const { notes } = cache.readQuery({ query: GET_NOTES });\n      const { title, content } = variables;\n      const newNote = {\n        __typename: \"Note\",\n        title,\n        content,\n        id: notes.length + 1\n      };\n      cache.writeData({\n        data: {\n          notes: [newNote, ...notes]\n        }\n      });\n      saveNotes(cache);\n      return newNote;\n    },\n    editNote: (_, { id, title, content }, { cache }) => {\n      const noteId = cache.config.dataIdFromObject({\n        __typename: \"Note\",\n        id\n      });\n      const note = cache.readFragment({ fragment: NOTE_FRAGMENT, id: noteId });\n      const updatedNote = {\n        ...note,\n        title,\n        content\n      };\n      cache.writeFragment({\n        id: noteId,\n        fragment: NOTE_FRAGMENT,\n        data: updatedNote\n      });\n      saveNotes(cache);\n      return updatedNote;\n    }\n  }\n};\n","import { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { withClientState } from \"apollo-link-state\";\nimport { ApolloLink } from \"apollo-link\";\n\nimport { typeDefs, defaults, resolvers } from \"./clientState\";\n\nconst cache = new InMemoryCache();\n\nconst stateLink = withClientState({\n  cache,\n  typeDefs,\n  defaults,\n  resolvers\n});\n\nconst client = new ApolloClient({\n  cache,\n  link: ApolloLink.from([stateLink])\n});\n\nexport default client;\n","import { injectGlobal } from \"styled-components\";\n\ninjectGlobal`\n    :root {\n        --greyColor: #A2A19E;\n        --blackColor: #373630;\n    }\n    body{\n        background-color:#F7F5F3;\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        color:var(--blackColor);\n        padding:50px 100px;\n        margin:0;\n    }\n    #root{\n        max-width:1000px;\n        width:100%;\n        margin:0 auto;\n    }\n    a {\n        color:inherit;\n        text-decoration:none;\n    }\n    div{\n        margin:0;\n    }\n    input,\n    textarea{\n        appearance:none;\n        border:none;\n        background-color:transparent;\n        resize:none;\n        &::placeholder {\n            color: #E7E7E6;\n        }\n        &:focus,\n        &:active{\n            outline:none;\n        }\n    }\n    .markdown a{\n        text-decoration:underline;\n    }\n    button{\n        appearance:none;\n        border:none;\n        background-color:transparent;\n        font-weight:600;\n        font-size:15px;\n        cursor:pointer;\n        border:2.5px solid var(--blackColor);\n        &:focus,\n        &:active{\n            outline:none\n        }\n\n    }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport { ApolloProvider } from \"react-apollo\";\nimport client from \"./apollo\";\nimport \"./globalStyles\";\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}